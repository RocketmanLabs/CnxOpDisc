// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Cnx.Shared.DAL.Models
{
    using Newtonsoft.Json;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class EntityDB : System.Data.Entity.DbContext, IEntityDB
    {
        public System.Data.Entity.DbSet<Axis> Axes { get; set; } // Axes
        public System.Data.Entity.DbSet<AxisList> AxisLists { get; set; } // AxisLists
        public System.Data.Entity.DbSet<Choice> Choices { get; set; } // Choices
        public System.Data.Entity.DbSet<Demographic> Demographics { get; set; } // Demographics
        public System.Data.Entity.DbSet<Inquiry> Inquiries { get; set; } // Inquiries
        public System.Data.Entity.DbSet<Member> Members { get; set; } // Members
        public System.Data.Entity.DbSet<Participant> Participants { get; set; } // Participants
        public System.Data.Entity.DbSet<Result> Results { get; set; } // Results
        public System.Data.Entity.DbSet<ScaleEntry> ScaleEntries { get; set; } // ScaleEntry
        public System.Data.Entity.DbSet<ScaleList> ScaleLists { get; set; } // ScaleLists
        public System.Data.Entity.DbSet<Topic> Topics { get; set; } // Topics
        public System.Data.Entity.DbSet<TopicList> TopicLists { get; set; } // TopicLists
        public System.Data.Entity.DbSet<User> Users { get; set; } // Users
        public System.Data.Entity.DbSet<Vote> Votes { get; set; } // Votes

        static EntityDB()
        {
            System.Data.Entity.Database.SetInitializer<EntityDB>(null);
        }

        public EntityDB()
            : base("Name=")
        {
        }

        public EntityDB(string connectionString)
            : base(connectionString)
        {
        }

        public EntityDB(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public EntityDB(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public EntityDB(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new Axis_Map());
            modelBuilder.Configurations.Add(new AxisList_Map());
            modelBuilder.Configurations.Add(new Choice_Map());
            modelBuilder.Configurations.Add(new Demographic_Map());
            modelBuilder.Configurations.Add(new Inquiry_Map());
            modelBuilder.Configurations.Add(new Member_Map());
            modelBuilder.Configurations.Add(new Participant_Map());
            modelBuilder.Configurations.Add(new Result_Map());
            modelBuilder.Configurations.Add(new ScaleEntry_Map());
            modelBuilder.Configurations.Add(new ScaleList_Map());
            modelBuilder.Configurations.Add(new Topic_Map());
            modelBuilder.Configurations.Add(new TopicList_Map());
            modelBuilder.Configurations.Add(new User_Map());
            modelBuilder.Configurations.Add(new Vote_Map());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new Axis_Map(schema));
            modelBuilder.Configurations.Add(new AxisList_Map(schema));
            modelBuilder.Configurations.Add(new Choice_Map(schema));
            modelBuilder.Configurations.Add(new Demographic_Map(schema));
            modelBuilder.Configurations.Add(new Inquiry_Map(schema));
            modelBuilder.Configurations.Add(new Member_Map(schema));
            modelBuilder.Configurations.Add(new Participant_Map(schema));
            modelBuilder.Configurations.Add(new Result_Map(schema));
            modelBuilder.Configurations.Add(new ScaleEntry_Map(schema));
            modelBuilder.Configurations.Add(new ScaleList_Map(schema));
            modelBuilder.Configurations.Add(new Topic_Map(schema));
            modelBuilder.Configurations.Add(new TopicList_Map(schema));
            modelBuilder.Configurations.Add(new User_Map(schema));
            modelBuilder.Configurations.Add(new Vote_Map(schema));
            return modelBuilder;
        }
    }
}
// </auto-generated>
