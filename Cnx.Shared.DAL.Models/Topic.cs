// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Cnx.Shared.DAL.Models
{
    using Newtonsoft.Json;

    // Topics
    [Table("Topics", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public partial class Topic : EntityBaseClass
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_Topic", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"TopicListId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Topic list ID")]
        public int TopicListId { get; set; } // TopicListId

        [Column(@"Symbol", Order = 3, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Symbol")]
        public string Symbol { get; set; } // Symbol (length: 12)

        [Column(@"Text", Order = 4, TypeName = "varchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Text")]
        public string Text { get; set; } // Text (length: 100)

        [Column(@"Comment", Order = 5, TypeName = "varchar(max)")]
        [Required(AllowEmptyStrings = true)]
        [Display(Name = "Comment")]
        public string Comment { get; set; } // Comment

        [Column(@"Deleted", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "Deleted")]
        public bool Deleted { get; set; } = false; // Deleted

        // Foreign keys

        /// <summary>
        /// Parent TopicList pointed by [Topics].([TopicListId]) (FK_Topic_TopicList)
        /// </summary>
        [JsonIgnore]
        [ForeignKey("TopicListId"), Required] public virtual TopicList TopicList { get; set; } // FK_Topic_TopicList
    }

}
// </auto-generated>
